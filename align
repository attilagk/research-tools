#!/bin/bash

usage="paired reads:\t`basename $0` [-B out.bam] [-t nthreads] [-r
ID:readgroup] reads_1.fq reads_2.fq\nunpaired reads:\t`basename $0` [-B out.bam] [-t nthreads] [-r ID:readgroup] -U reads_1.fq ... reads_n.fq"

# load modules when running on minerva
case `hostname` in
    minerva*)
        case $ALIGNER in
            bowtie2) module load ${MODULE_BOWTIE2:-bowtie2} ;;
            *) module load ${MODULE_BWA:-bwa} ;;
        esac
        module load ${MODULE_SAMTOOLS:-samtools}
        ;;
esac

# process options
while getopts ":B:t:Ur:h" opt; do
    case $opt in
        B) BAM=$OPTARG;; # BAM output
        t) nthreads="$OPTARG";; # number of threads
        U) U="-U";; # unpaired reads
        r) rg="$OPTARG";; # read group string
        h) echo -e $usage 2>&1; exit ;;
    esac
done
shift $(($OPTIND - 1))
BAM=${BAM:-`basename $1`.bam}
nthreads=${nthreads:-1}

# aligner command
case $ALIGNER in
    bowtie2)
        if test -z $U; then
            arg="-1 $1 -2 $2" # paired reads
        else
            arg="$@"
        fi
        alncmd="bowtie2 -p $nthreads $U -x $BOWTIE2_INDEX $arg" ;;
    *) alncmd="bwa mem -t $nthreads $U $BWA_INDEX $@" ;;
esac

if test -z $rg; then
    rgcmd=cat
else
    rgcmd="samtools addreplacerg -r $rg"
fi

# samtools' threading option -@ means ADDITIONAL threads, which is 1 less all threads
samthreads=$(($nthreads - 1))

# align
$alncmd |
# convert SAM to BAM
samtools view -hb -@ $samthreads - |
$rgcmd - |
samtools sort -@ $samthreads -o $BAM -
samtools index -b $BAM
