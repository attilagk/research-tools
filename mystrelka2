#!/usr/bin/env bash

usage="usage: `basename $0` -t Somatic|Germline -p numproc -r refseq.fa -1 case.bam -2 control.bam -o outputDir [-x]"

# print usage without any arguments
if test $# -eq 0; then
    echo $usage >&2; exit 1
fi

# options
type=Somatic
exomeOpt=''
while getopts 't:p:r:1:2:a:b:o:x' myopt; do
    case $myopt in
        t) type=$OPTARG;;
        p) numproc=$OPTARG;;
        r) refseq=$OPTARG;;
        1) caseBAM=$OPTARG;;
        2) controlBAM=$OPTARG;;
        a) caseSample=$OPTARG;;
        b) controlSample=$OPTARG;;
        o) outputDir=$OPTARG;;
        x) exomeOpt='--exome';;
    esac
done
jobOpt=""
if test -v numproc; then
    jobOpt="-j $numproc"
fi

STRELKA_INSTALL_PATH=/usr/local
configScript="${STRELKA_INSTALL_PATH}/bin/configureStrelka${type}Workflow.py"

analysisDir="${outputDir:-.}/strelka2${type}"
variantsdir=analysisDir/results/variants/

configcmd="$configScript \
--referenceFasta=$refseq \
$exomeOpt \
--runDir=$analysisDir"

case $type in
    Somatic) configcmd="$configcmd --normalBam=$controlBAM --tumorBam=$caseBAM";;
    Germline) configcmd="$configcmd --bam=$controlBAM --bam=$caseBAM";;
esac

eval $configcmd

$analysisDir/runWorkflow.py -m local $jobOpt

case $type in
    Somatic)
        cd $variantsdir
        for vcf in *.vcf.gz; do
            echo $vcf
            bcftools view -h $vcf | grep '^#CHROM'
            $HOME/bin/rename-case-control-samples -a $caseSample -b $controlSample $vcf
            bcftools index --tbi $vcf
        done
        ;;
esac
