#!/usr/bin/env bash

usage="usage: `basename $0` -r refseq.fa -1 case.bam -2 control.bam -o outputDir"

# print usage without any arguments
if test $# -eq 0; then
    echo $usage >&2; exit 1
fi

# options
outprefix='out'

while getopts 'r:1:2:a:b:o:' myopt; do
    case $myopt in
        r) refseq=`realpath $OPTARG`;;
        1) caseBAM=`realpath $OPTARG`;;
        2) controlBAM=`realpath $OPTARG`;;
        a) caseSample=$OPTARG;;
        b) controlSample=$OPTARG;;
        o) outputDir=`realpath $OPTARG`;;
    esac
done

outputDir="$outputDir/JointSNVMix2"

# check, create, and change to output directory
if test -d $outputDir
then echo "$outputDir already exists; exiting"; exit 1
else mkdir -p $outputDir #&& cd $outputDir
fi

# some variables
outbn=$outputDir/$outprefix
tsv=$outbn.tsv
vcf=$outbn.vcf
vcfbody=$outbn.vcf.body
vcfheader=$HOME/bin/jsm.vcf.header
params=$outbn.cfg
trainlog=$outbn-train.log
classifylog=$outbn-classify.log

# train
jsm.py train $REFSEQ $controlBAM $caseBAM $params &> $trainlog
# classify
jsm.py classify --parameters_file $params --out_file $tsv $REFSEQ $controlBAM $caseBAM &> $classifylog
# convert tsv to vcf
jsm_tsv2vcf.py < $tsv > $vcfbody
cat $vcfheader $vcfbody | bcftools view -O z -o $vcf.gz -
bcftools index --tbi $vcf.gz
# clean up
rm $vcfbody
